ARG OS=

ARG ARCH=
ARG TOOLCHAIN=
ARG OPENSSL_TARGET=

ARG OPENSSL_VERSION=
ARG OPENSSL_SHA256=

ARG PCRE2_VERSION=
ARG PCRE2_SHA256=

ARG HAPROXY_MAJOR=
ARG HAPROXY_VERSION=
ARG HAPROXY_SHA256=

ARG LUA_VERSION=
ARG LUA_MD5=

# Build using cross-compilation, with amd64 as the build arch and $ARCH as the host

FROM --platform=linux/amd64 $OS as builder

ARG ARCH
ARG TOOLCHAIN
ARG ARCH_FLAGS

RUN dpkg --add-architecture "${ARCH}" && \
    apt-get update && \
    apt-get install --no-install-recommends -y \
            gcc-10-${TOOLCHAIN} libc6-dev-${ARCH}-cross make file libc6-dev perl libtext-template-perl libreadline-dev curl ca-certificates libcrypt-dev:${ARCH}

### OpenSSL

FROM --platform=linux/amd64 builder as ssl

ARG ARCH
ARG TOOLCHAIN
ARG ARCH_FLAGS

ARG OPENSSL_VERSION
ARG OPENSSL_SHA256
ARG OPENSSL_TARGET

RUN curl -OJL https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz && \
    echo ${OPENSSL_SHA256} openssl-${OPENSSL_VERSION}.tar.gz | sha256sum -c && \
    tar zxvf openssl-${OPENSSL_VERSION}.tar.gz && \
    cd openssl-${OPENSSL_VERSION} && \
    ./Configure ${OPENSSL_TARGET} --cross-compile-prefix=/usr/bin/${TOOLCHAIN}- CC=gcc-10 \
             -march=${ARCH_FLAGS} enable-ec_nistp_64_gcc_128 \
             no-shared --prefix=/tmp/openssl --openssldir=/tmp/openssl && \
    make && \
    make install_sw

### PCRE2

FROM --platform=linux/amd64 builder as pcre2

ARG ARCH
ARG TOOLCHAIN
ARG ARCH_FLAGS

ARG PCRE2_VERSION
ARG PCRE2_SHA256

RUN curl -OJL "https://github.com/PhilipHazel/pcre2/releases/download/pcre2-${PCRE2_VERSION}/pcre2-${PCRE2_VERSION}.tar.gz" && \
    echo ${PCRE2_SHA256} pcre2-${PCRE2_VERSION}.tar.gz | sha256sum -c && \
    tar zxvf pcre2-${PCRE2_VERSION}.tar.gz && \
    cd pcre2-${PCRE2_VERSION} && \
    CC=/usr/bin/${TOOLCHAIN}-gcc-10 CFLAGS="-O3 -march=${ARCH_FLAGS} -g" \
    ./configure --prefix=/tmp/pcre2 --disable-shared --enable-jit --host=${TOOLCHAIN} && \
    make install

# Lua

FROM builder as lua

ARG ARCH
ARG TOOLCHAIN
ARG ARCH_FLAGS

ARG LUA_VERSION
ARG LUA_MD5

RUN curl -OJL "http://www.lua.org/ftp/lua-${LUA_VERSION}.tar.gz" && \
    echo "${LUA_MD5} lua-${LUA_VERSION}.tar.gz" | md5sum -c && \
    tar zxf lua-${LUA_VERSION}.tar.gz && \
    cd lua-${LUA_VERSION} && \
    make CC="/usr/bin/${TOOLCHAIN}-gcc-10" \
         MYCFLAGS="-march=${ARCH_FLAGS} -g" \
         AR="/usr/bin/${TOOLCHAIN}-ar rcu" \
         RANLIB=/usr/bin/${TOOLCHAIN}-ranlib && \
    make install INSTALL_TOP=/tmp/lua

### HAProxy

FROM --platform=linux/amd64 builder as haproxy

COPY --from=ssl   /tmp/openssl /tmp/openssl
COPY --from=pcre2 /tmp/pcre2   /tmp/pcre2
COPY --from=lua   /tmp/lua     /tmp/lua

ARG ARCH
ARG TOOLCHAIN
ARG ARCH_FLAGS

ARG HAPROXY_MAJOR
ARG HAPROXY_VERSION
ARG HAPROXY_SHA256

RUN curl -OJL "http://www.haproxy.org/download/${HAPROXY_MAJOR}/src/haproxy-${HAPROXY_VERSION}.tar.gz" && \
    echo "${HAPROXY_SHA256} haproxy-${HAPROXY_VERSION}.tar.gz" | sha256sum -c && \
    tar zxvf haproxy-${HAPROXY_VERSION}.tar.gz && \
    make -C haproxy-${HAPROXY_VERSION} \
      TARGET=linux-glibc \
      ARCH_FLAGS="-march=${ARCH_FLAGS}" \
      CC=/usr/bin/${TOOLCHAIN}-gcc-10 \
      USE_SLZ=1 \
      USE_STATIC_PCRE2=1 USE_PCRE2_JIT=1 PCRE2DIR=/tmp/pcre2 \
      USE_OPENSSL=1 SSL_INC=/tmp/openssl/include SSL_LIB=/tmp/openssl/lib \
      USE_LUA=1 LUA_LIB=/tmp/lua/lib LUA_INC=/tmp/lua/include \
      USE_PROMEX=1 \
      DESTDIR=/tmp/haproxy PREFIX= \
      all \
      install-bin && \
    mkdir -p /tmp/haproxy/etc/haproxy && \
    cp -R haproxy-${HAPROXY_VERSION}/examples/errorfiles /tmp/haproxy/etc/haproxy/errors



# Switch to target platform
FROM --platform=linux/$ARCH $OS as runtime

RUN apt-get update && \
    apt-get install --no-install-recommends -y curl ca-certificates

COPY --from=haproxy /tmp/haproxy /usr/local/

RUN rm -rf /var/lib/apt/lists/*

CMD ["haproxy", "-f", "/usr/local/etc/haproxy/haproxy.cfg"]
